# Copyright (C) 2021 á´‡ÊŸÃ§ÉªÉ´ Â¦ ğŸ‡¯ğŸ‡µ
#
# Licensed under the  GPL-3.0 License;
# you may not use this file except in compliance with the License.
#

#Brend UserBot - á´‡ÊŸÃ§ÉªÉ´ Â¦ ğŸ‡¯ğŸ‡µ

from userbot.cmdhelp import CmdHelp
from userbot import PLUGIN_CHANNEL_ID, CMD_HELP
from userbot.events import register
from re import search
from json import loads, JSONDecodeError
from userbot.language import LANGUAGE_JSON
from os import remove

@register(outgoing=True, pattern="^.dil ?(.*)")
@register(outgoing=True, pattern="^.lang ?(.*)")
async def dil(event):
    global LANGUAGE_JSON

    É™mr = event.pattern_match.group(1)
    if search(r"y[uÃ¼]klÉ™|install", É™mr):
        await event.edit("`Dil faylÄ± yÃ¼klÉ™nir... XahiÅŸ olunur gÃ¶zlÉ™yin.`")
        if event.is_reply:
            reply = await event.get_reply_message()
            dosya = await reply.download_media()

            if ((len(reply.file.name.split(".")) >= 2) and (not reply.file.name.split(".")[1] == "brendjson")):
                return await event.edit("`XahiÅŸ olunur dÃ¼zgÃ¼n`Â **BrendJSON** `faylÄ± verin!`")

            try:
                fayl = loads(open(dosya, "r").read())
            except JSONDecodeError:
                return await event.edit("`XahiÅŸ olunur dÃ¼zgÃ¼n`Â **BrendJSON** `faylÄ± verin`")

            await event.edit(f"`{fayl['LANGUAGE']}` `dili yÃ¼klÉ™nir...`")
            pchannel = await event.client.get_entity(PLUGIN_CHANNEL_ID)

            fayl = await reply.download_media(file="./userbot/language/")
            fayl = loads(open(fayl, "r").read())
            await reply.forward_to(pchannel)
            
            LANGUAGE_JSON = fayl
            await event.edit(f"âœ… `{fayl['LANGUAGE']}` `dili uÄŸurla yÃ¼klÉ™ndi!`\n\n**Ä°ÅŸlÉ™rin uÄŸurlu olmasÄ± Ã¼Ã§Ã¼n botu yenidÉ™n baÅŸladÄ±n!**")
        else:
            await event.edit("**XahiÅŸ olunur bir dil faylÄ±na cavab verin!**")
    elif search(r"mÉ™lumat|info", É™mr):
        await event.edit("`Dil faylÄ±nÄ±n mÉ™lumatlarÄ± gÉ™tirilir... XahiÅŸ olunur gÃ¶zlÉ™yin.`")
        if event.is_reply:
            reply = await event.get_reply_message()
            if ((len(reply.file.name.split(".")) >= 1) and (not reply.file.name.split(".")[1] == "brendson")):
                return await event.edit("`XahiÅŸ olunur dÃ¼zgÃ¼n`Â **BrendJSON** `faylÄ± verin!`")

            fayl = await reply.download_media()

            try:
                fayl = loads(open(fayl, "r").read())
            except JSONDecodeError:
                return await event.edit("`XahiÅŸ olunur dÃ¼zgÃ¼n`Â **BrendJSON** `faylÄ± verin!`")

            await event.edit(
                f"**Dil: **`{fayl['LANGUAGE']}`\n"
                f"**Dil Kodu: **`{fayl['LANGCODE']}`\n"
                f"**Ã‡evirÉ™n: **`{fayl['AUTHOR']}`\n"

                f"\n\n`Dil dosyasÄ±nÄ± yÃ¼klemek iÃ§in` `.dil yÃ¼kle` `komutunu kullanÄ±nÄ±z.`"
            )
        else:
            await event.edit("**XahiÅŸ olunur bir dil faylÄ±na cavab verin!**")
    else:
        await event.edit(
            f"**Dil: **`{LANGUAGE_JSON['LANGUAGE']}`\n"
            f"**Dil Kodu: **`{LANGUAGE_JSON['LANGCODE']}`\n"
            f"**Ã‡evirÉ™n: **`{LANGUAGE_JSON ['AUTHOR']}`\n"

            f"\n\nDigÉ™r dillÉ™r Ã¼Ã§Ã¼n @BrendDil kanalÄ±na baxa bilÉ™rsÉ™n."
        )

CmdHelp('dil').add_command(
    'dil', None, 'YÃ¼klÉ™diyiniz dil haqqÄ±nda mÉ™lumat verÉ™r.'
).add_command(
    'dil mÉ™lumat', None, 'YÃ¼klÉ™diyiniz dil faylÄ± haqqÄ±nda mÉ™lumat verÉ™r.'
).add_command(
    'dil yÃ¼klÉ™', None, 'Cavab verdiyiniz dili yÃ¼klÉ™yÉ™r.'
).add()
